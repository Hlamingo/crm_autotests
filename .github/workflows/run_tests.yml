name: Run crm autotests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Authorization'
        default: 'TestAuthorization'
        type: choice
        options:
          - TestAuthorization
          - TestPrlistDBF

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download_history_report:
    runs-on: ubuntu-latest
    name: Download history Allure report

    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: >
          ARTIFACT_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/Hlamingo/crm_autotests/actions/artifacts?name=allure-results" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])") &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.ALLURE_ARTIFACT_TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Hlamingo/crm_autotests/actions/artifacts/$ARTIFACT_ID/zip" 
          -o artifacts.zip &&
          HISTORY_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/Hlamingo/crm_autotests/actions/artifacts?name=github-pages" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])") &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.ALLURE_ARTIFACT_TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Hlamingo/crm_autotests/actions/artifacts/$HISTORY_ID/zip" 
          -o github_pages.zip
      - run: |
          mkdir allure-results
          unzip artifacts.zip -d allure-results
      - run: |
          mkdir report_history pages_history
          unzip github_pages.zip -d report_history
          tar -xvf report_history/artifact.tar -C pages_history
      - run: cp -r pages_history/history allure-results
      - name: Save report history as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  run_crm_autotests:
    needs: [ download_history_report ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Firefox
        uses: browser-actions/setup-firefox@v1
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Download report history
        uses: actions/download-artifact@v4
      - name: Run TestPrlistDBF
        if: ${{github.event.inputs.test_type == 'TestPrlistDBF'}}
        run: pytest -n auto --env=prod tests/file_processing/product_import_from_files/test_prlist_dbf.py
      - name: Run TestAuthorization
        if: ${{github.event.inputs.test_type == 'TestAuthorization'}}
        env:
          LOGIN: ${{secrets.LOGIN}}
          PASSWORD: ${{secrets.PASSWORD}}
        run: pytest --alluredir=allure-results --env=dev tests/base/test_authorization.py
      - name: Save allure-results
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-results
          retention-days: 1

  generate_report:
    needs: [ run_crm_autotests ]
    runs-on: ubuntu-latest
    name: Generate report

    steps:

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      - run: |
          sudo apt-get install default-jre-headless
          wget https://github.com/allure-framework/allure2/releases/download/2.34.0/allure_2.34.0-1_all.deb
          sudo dpkg -i allure_2.34.0-1_all.deb
          sudo apt-get install -f
          allure --version
      - name: Download allure-results
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: Save generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish_report:
    needs: [ generate_report ]
    runs-on: ubuntu-latest
    name: Publish report

    steps:
      - name: Download generated report
        uses: actions/download-artifact@v4
      - name: Upload Pages artifacts
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4